"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var request_1 = __importDefault(require("request"));
var respond_1 = __importDefault(require("../utils/respond"));
var authorization_1 = require("../utils/authorization");
function default_1(requestOptions, defaultOptions, callback) {
    authorization_1.addAuthorization(requestOptions, defaultOptions.privateKey);
    request_1.default(requestOptions, function (err, response, body) {
        if (typeof callback != "function")
            return;
        if (err) {
            respond_1.default(true, err, callback);
            return;
        }
        if (response && response.statusCode === 429) {
            respond_1.default(true, __assign(__assign({}, body), { "X-RateLimit-Limit": parseInt(response.caseless.get("X-RateLimit-Limit"), 10), "X-RateLimit-Reset": parseInt(response.caseless.get("X-RateLimit-Reset"), 10), "X-RateLimit-Interval": parseInt(response.caseless.get("X-RateLimit-Interval")) }), callback);
            return;
        }
        if (response && response.statusCode >= 400) {
            respond_1.default(true, body, callback);
            return;
        }
        respond_1.default(false, body, callback);
    });
}
exports.default = default_1;
