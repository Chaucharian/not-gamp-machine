"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __importDefault(require("lodash"));
/*
    Constants
*/
var errorMessages_1 = __importDefault(require("../constants/errorMessages"));
/*
    Utils
*/
var respond_1 = __importDefault(require("../../utils/respond"));
var request_1 = __importDefault(require("../../utils/request"));
/*
    Delete a file
*/
var deleteFile = function (fileId, defaultOptions, callback) {
    if (!fileId) {
        respond_1.default(true, errorMessages_1.default.FILE_ID_MISSING, callback);
        return;
    }
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/" + fileId,
        method: "DELETE",
        json: true,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Get Metadata of a file
*/
var getMetadata = function (fileIdOrURL, defaultOptions, callback) {
    if (!fileIdOrURL || fileIdOrURL.trim() == "") {
        respond_1.default(true, errorMessages_1.default.FILE_ID_OR_URL_MISSING, callback);
        return;
    }
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/" + fileIdOrURL + "/metadata",
        method: "GET",
        json: true,
    };
    // In case of URL change the endopint
    if (fileIdOrURL.indexOf("http") === 0) {
        requestOptions = {
            url: "https://api.imagekit.io/v1/metadata?url=" + fileIdOrURL,
            method: "GET",
            json: true,
        };
    }
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Get Details of a file
*/
var getDetails = function (fileId, defaultOptions, callback) {
    if (!fileId) {
        respond_1.default(true, errorMessages_1.default.FILE_ID_MISSING, callback);
        return;
    }
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/" + fileId + "/details",
        method: "GET",
        json: true,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Update file details
*/
var updateDetails = function (fileId, updateData, defaultOptions, callback) {
    if (!fileId) {
        respond_1.default(true, errorMessages_1.default.FILE_ID_MISSING, callback);
        return;
    }
    if (!lodash_1.default.isObject(updateData)) {
        respond_1.default(true, errorMessages_1.default.UPDATE_DATA_MISSING, callback);
        return;
    }
    var data = {
        tags: updateData.tags,
        customCoordinates: updateData.customCoordinates,
        extensions: updateData.extensions,
        webhookUrl: updateData.webhookUrl
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/" + fileId + "/details",
        method: "PATCH",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    List files
*/
var listFiles = function (listOptions, defaultOptions, callback) {
    if (listOptions && !lodash_1.default.isObject(listOptions)) {
        respond_1.default(true, errorMessages_1.default.UPDATE_DATA_MISSING, callback);
        return;
    }
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/",
        method: "GET",
        qs: listOptions || {},
        json: true,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Bulk Delete By FileIds
*/
var bulkDeleteFiles = function (fileIdArray, defaultOptions, callback) {
    if (!Array.isArray(fileIdArray) ||
        fileIdArray.length === 0 ||
        fileIdArray.filter(function (fileId) { return typeof fileId !== "string"; }).length > 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_FILEIDS_VALUE, callback);
        return;
    }
    var data = {
        fileIds: fileIdArray,
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/batch/deleteByFileIds",
        method: "POST",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Add tags in bulk
*/
var bulkAddTags = function (fileIdArray, tags, defaultOptions, callback) {
    if (!Array.isArray(fileIdArray) ||
        fileIdArray.length === 0 ||
        fileIdArray.filter(function (fileId) { return typeof fileId !== "string"; }).length > 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_FILEIDS_VALUE, callback);
        return;
    }
    if (!Array.isArray(tags) || tags.length === 0 || tags.filter(function (tag) { return typeof tag !== "string"; }).length > 0) {
        respond_1.default(true, errorMessages_1.default.BULK_ADD_TAGS_INVALID, callback);
        return;
    }
    var data = {
        fileIds: fileIdArray,
        tags: tags,
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/addTags",
        method: "POST",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Remove tags in bulk
*/
var bulkRemoveTags = function (fileIdArray, tags, defaultOptions, callback) {
    if (!Array.isArray(fileIdArray) ||
        fileIdArray.length === 0 ||
        fileIdArray.filter(function (fileId) { return typeof fileId !== "string"; }).length > 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_FILEIDS_VALUE, callback);
        return;
    }
    if (!Array.isArray(tags) || tags.length === 0 || tags.filter(function (tag) { return typeof tag !== "string"; }).length > 0) {
        respond_1.default(true, errorMessages_1.default.BULK_ADD_TAGS_INVALID, callback);
        return;
    }
    var data = {
        fileIds: fileIdArray,
        tags: tags,
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/removeTags",
        method: "POST",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Copy file
*/
var copyFile = function (sourceFilePath, destinationPath, defaultOptions, callback) {
    if (typeof sourceFilePath !== "string" || sourceFilePath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FILE_PATH, callback);
        return;
    }
    if (typeof destinationPath !== "string" || destinationPath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);
        return;
    }
    var data = {
        sourceFilePath: sourceFilePath,
        destinationPath: destinationPath,
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/copy",
        method: "POST",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Move file
*/
var moveFile = function (sourceFilePath, destinationPath, defaultOptions, callback) {
    if (typeof sourceFilePath !== "string" || sourceFilePath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FILE_PATH, callback);
        return;
    }
    if (typeof destinationPath !== "string" || destinationPath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);
        return;
    }
    var data = {
        sourceFilePath: sourceFilePath,
        destinationPath: destinationPath,
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/files/move",
        method: "POST",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Copy Folder
*/
var copyFolder = function (sourceFolderPath, destinationPath, defaultOptions, callback) {
    if (typeof sourceFolderPath !== "string" || sourceFolderPath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FOLDER_PATH, callback);
        return;
    }
    if (typeof destinationPath !== "string" || destinationPath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);
        return;
    }
    var data = {
        sourceFolderPath: sourceFolderPath,
        destinationPath: destinationPath,
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/bulkJobs/copyFolder",
        method: "POST",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Move Folder
*/
var moveFolder = function (sourceFolderPath, destinationPath, defaultOptions, callback) {
    if (typeof sourceFolderPath !== "string" || sourceFolderPath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_SOURCE_FOLDER_PATH, callback);
        return;
    }
    if (typeof destinationPath !== "string" || destinationPath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_DESTINATION_FOLDER_PATH, callback);
        return;
    }
    var data = {
        sourceFolderPath: sourceFolderPath,
        destinationPath: destinationPath,
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/bulkJobs/moveFolder",
        method: "POST",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Create folder
*/
var createFolder = function (folderName, parentFolderPath, defaultOptions, callback) {
    if (typeof folderName !== "string" || folderName.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_FOLDER_NAME, callback);
        return;
    }
    if (typeof parentFolderPath !== "string" || parentFolderPath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_PARENT_FOLDER_PATH, callback);
        return;
    }
    var data = {
        folderName: folderName,
        parentFolderPath: parentFolderPath,
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/folder",
        method: "POST",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Delete folder
*/
var deleteFolder = function (folderPath, defaultOptions, callback) {
    if (typeof folderPath !== "string" || folderPath.length === 0) {
        respond_1.default(true, errorMessages_1.default.INVALID_FOLDER_PATH, callback);
        return;
    }
    var data = {
        folderPath: folderPath,
    };
    var requestOptions = {
        url: "https://api.imagekit.io/v1/folder",
        method: "DELETE",
        json: data,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
/*
    Bulk job status
*/
var getBulkJobStatus = function (jobId, defaultOptions, callback) {
    if (!jobId) {
        respond_1.default(true, errorMessages_1.default.JOB_ID_MISSING, callback);
        return;
    }
    var requestOptions = {
        url: "https://api.imagekit.io/v1/bulkJobs/" + jobId,
        method: "GET",
        json: true,
    };
    request_1.default(requestOptions, defaultOptions, callback);
};
exports.default = {
    deleteFile: deleteFile,
    getMetadata: getMetadata,
    getDetails: getDetails,
    updateDetails: updateDetails,
    listFiles: listFiles,
    bulkDeleteFiles: bulkDeleteFiles,
    bulkAddTags: bulkAddTags,
    bulkRemoveTags: bulkRemoveTags,
    copyFile: copyFile,
    moveFile: moveFile,
    copyFolder: copyFolder,
    moveFolder: moveFolder,
    createFolder: createFolder,
    deleteFolder: deleteFolder,
    getBulkJobStatus: getBulkJobStatus,
};
