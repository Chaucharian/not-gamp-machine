import { IKCallback } from "../interfaces/IKCallback";
import { ImageKitOptions, ListFileOptions, ListFileResponse, FileDetailsOptions, FileDetailsResponse, FileMetadataResponse, BulkDeleteFilesResponse, BulkDeleteFilesError } from "../interfaces/";
declare const _default: {
    deleteFile: (fileId: string, defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
    getMetadata: (fileIdOrURL: string, defaultOptions: ImageKitOptions, callback?: IKCallback<FileMetadataResponse, Error> | undefined) => void;
    getDetails: (fileId: string, defaultOptions: ImageKitOptions, callback?: IKCallback<FileDetailsResponse, Error> | undefined) => void;
    updateDetails: (fileId: string, updateData: FileDetailsOptions, defaultOptions: ImageKitOptions, callback?: IKCallback<FileDetailsResponse, Error> | undefined) => void;
    listFiles: (listOptions: ListFileOptions, defaultOptions: ImageKitOptions, callback?: IKCallback<ListFileResponse[], Error> | undefined) => void;
    bulkDeleteFiles: (fileIdArray: string[], defaultOptions: ImageKitOptions, callback?: IKCallback<BulkDeleteFilesResponse, BulkDeleteFilesError> | undefined) => void;
    bulkAddTags: (fileIdArray: string[], tags: string[], defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
    bulkRemoveTags: (fileIdArray: string[], tags: string[], defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
    copyFile: (sourceFilePath: string, destinationPath: string, defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
    moveFile: (sourceFilePath: string, destinationPath: string, defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
    copyFolder: (sourceFolderPath: string, destinationPath: string, defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
    moveFolder: (sourceFolderPath: string, destinationPath: string, defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
    createFolder: (folderName: string, parentFolderPath: string, defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
    deleteFolder: (folderPath: string, defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
    getBulkJobStatus: (jobId: string, defaultOptions: ImageKitOptions, callback?: IKCallback<void, Error> | undefined) => void;
};
export default _default;
