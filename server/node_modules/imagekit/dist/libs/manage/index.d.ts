declare const _default: {
    listFiles: (listOptions: import("../interfaces").ListFileOptions, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<import("../interfaces").ListFileResponse[], Error> | undefined) => void;
    getFileDetails: (fileId: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<import("../interfaces").FileDetailsResponse, Error> | undefined) => void;
    updateFileDetails: (fileId: string, updateData: import("../interfaces").FileDetailsOptions, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<import("../interfaces").FileDetailsResponse, Error> | undefined) => void;
    getFileMetadata: (fileIdOrURL: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<import("../interfaces").FileMetadataResponse, Error> | undefined) => void;
    deleteFile: (fileId: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    bulkDeleteFiles: (fileIdArray: string[], defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<import("../interfaces").BulkDeleteFilesResponse, import("../interfaces").BulkDeleteFilesError> | undefined) => void;
    bulkAddTags: (fileIdArray: string[], tags: string[], defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    bulkRemoveTags: (fileIdArray: string[], tags: string[], defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    copyFile: (sourceFilePath: string, destinationPath: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    moveFile: (sourceFilePath: string, destinationPath: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    copyFolder: (sourceFolderPath: string, destinationPath: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    moveFolder: (sourceFolderPath: string, destinationPath: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    createFolder: (folderName: string, parentFolderPath: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    deleteFolder: (folderPath: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    getBulkJobStatus: (jobId: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<void, Error> | undefined) => void;
    purgeCache: (url: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<import("../interfaces").PurgeCacheResponse, Error> | undefined) => void;
    getPurgeCacheStatus: (requestId: string, defaultOptions: import("../interfaces").ImageKitOptions, callback?: import("../interfaces").IKCallback<import("../interfaces").PurgeCacheStatusResponse, Error> | undefined) => void;
};
export default _default;
